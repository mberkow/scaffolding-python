#!/usr/bin/env python
import errno
import subprocess
from os import environ
from os import path
from setuptools import find_packages
from setuptools import setup


version = environ.get('PROJECT_VERSION')
if version is None:
    version = "0.1-DEV"

# For debugging/error reporting, it's handy to know the exact Git
# commit it was built from.  This tries to grab that information and inject
# it into the __version__ file, along with the semantic version.
sha = None
try:
    sha = subprocess.check_output(['git', 'rev-parse', 'HEAD']).strip()[:8]
except OSError as e:
    # Raise it only if the error isn't that Git is missing
    if e.errno != errno.ENOENT:
        raise
except subprocess.CalledProcessError:
    # That's okay; we just won't know the SHA
    pass


version_file = path.join(path.dirname(__file__), 'scaffolding', '__version__.py')
if not path.exists(version_file):
    with open(path.join(path.dirname(__file__), 'scaffolding', '__version__.py'), 'w') as f:
        f.write("# this file is autogenerated by setup.py\n"
                "version = '%s'\nsha = %s\n" % (version, "'%s'" % sha if sha else 'None'))

setup(
    name="scaffolding-python",
    version=version,
    url="https://https://github.com/mberkow//%(name)s",
    author="Mendy Berkowitz",
    author_email="mberkow@gmail.com",
    license="Public",
    scripts=['scaffolding/scaffolding.py'],
    packages=find_packages(),
    package_data={
        'scaffolding': [
            '*.yml',
            '*.py'
        ],
    },
    install_requires=open('requirements.in', 'r').readlines(),
    description="test build deploy tool",
)
